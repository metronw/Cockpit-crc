generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Ticket {
  id                 Int      @id @default(autoincrement())
  subject            String?  @db.VarChar(1000)
  company_id         Int
  status             String
  user_id            Int
  type               Int?
  procedures         String?  @db.LongText
  createdAt          DateTime @default(now())
  client_name        String?
  caller_number      String?
  communication_id   String?
  communication_type String? @default("chat")
  trunk_name         String?
  caller_name        String?  
  identity_document  String?     
  address            String? @db.VarChar(500)
  isRecall           Boolean?  @default(false)
  erpProtocol        String?
}

model User {
  id          Int           @id @default(autoincrement())
  name        String
  email       String        @unique
  metro_id    Int
  password    String
  createdAt   DateTime      @default(now())
  role_id     Int?
  assignments User_assign[]
}

model User_phone {
  id            Int      @id @default(autoincrement())
  sip_extension String   @unique
  sip_server    String
  sip_password  String
  sip_port      Int
  sip_websocket String
  user_id       Int      @unique
  createdAt     DateTime @default(now())
  auto_answer   Boolean  @default(false)
}

model Queue {
  id         Int      @id
  name       String
  company_id Int
  trunk_name String
  createdAt  DateTime @default(now())
}

model PhonePrefix {
  id     Int    @id @default(autoincrement())
  name   String
  number String
  trunk  String
}

model Procedure_item {
  id                   Int     @id @default(autoincrement())
  label                String
  speech_suggestion_id Int?
  input_type           Int
  data_source          String?
  company_id           Int?
  ticket_type_id       Int?
  created_by           Int
  modal_title          String?
  modal_body           String? @db.LongText
}

model Procedures {
  id             Int    @id @default(autoincrement())
  ticket_type_id Int
  company_id     Int
  items          String @db.LongText

  @@unique([company_id, ticket_type_id])
}

model Speech_suggestion {
  id   Int    @id @default(autoincrement())
  text String
}

model Company {
  id           Int    @id
  threshold_1  Int?
  threshold_2  Int?
  fantasy_name String
}

model User_assign {
  id         Int  @id @default(autoincrement())
  company_id Int
  user_id    Int
  queue_type Int?
  user       User @relation(fields: [user_id], references: [id])

  @@unique([company_id, user_id, queue_type])
  @@index([user_id], map: "User_assign_user_id_fkey")
}
